import { createClient } from '@supabase/supabase-js'

const supabaseUrl = import.meta.env.VITE_SUPABASE_URL
const supabaseKey = import.meta.env.VITE_SUPABASE_ANON_KEY

if (!supabaseUrl || !supabaseKey) {
  throw new Error('Missing Supabase environment variables')
}

export const supabase = createClient(supabaseUrl, supabaseKey)

// Fun√ß√£o para testar conex√£o
export async function testConnection() {
  try {
    console.log('üîó Testando conex√£o com Supabase...')
    console.log('üìç URL:', supabaseUrl)
    
    const { error } = await supabase
      .from('vendedores')
      .select('count')
      .limit(1)
    
    if (error) {
      console.error('‚ùå Erro ao conectar:', error)
      return false
    }
    
    console.log('‚úÖ Conex√£o bem-sucedida!')
    return true
  } catch (error) {
    console.error('üí• Erro cr√≠tico:', error)
    return false
  }
}

// Tipos para as tabelas
export interface User {
  login: string
  senha: string
  cod_vendedor?: string
}

export interface AuthResponse {
  user: User | null
  error: string | null
}

// Fun√ß√£o para fazer login
export async function loginUser(login: string, senha: string): Promise<AuthResponse> {
  try {
    console.log('üîê Tentando login com:', { login, senha: senha.substring(0, 3) + '***' })
    
    const { data, error } = await supabase
      .from('vendedores')
      .select('login, senha, cod_vendedor')
      .eq('login', login)
      .eq('senha', senha)
      .single()

    console.log('üìä Resposta do Supabase:', { data, error })

    if (error) {
      console.error('‚ùå Erro do Supabase:', error)
      return { user: null, error: error.message || 'Credenciais inv√°lidas' }
    }

    if (!data) {
      console.log('‚ö†Ô∏è Nenhum usu√°rio encontrado')
      return { user: null, error: 'Usu√°rio n√£o encontrado' }
    }

    console.log('‚úÖ Login bem-sucedido:', data.login)
    return { user: data, error: null }
  } catch (error) {
    console.error('üí• Erro de conex√£o:', error)
    return { user: null, error: 'Erro na conex√£o' }
  }
}

// Fun√ß√µes de filtragem por vendedor
export async function getClientesByVendedor(cod_vendedor: string) {
  try {
    const { data, error } = await supabase
      .from('clientes')
      .select('*')
      .eq('cod_vendedor', cod_vendedor)
    
    if (error) {
      console.error('Erro ao buscar clientes:', error)
      return { data: [], error: error.message }
    }
    
    return { data, error: null }
  } catch (error) {
    console.error('Erro na conex√£o ao buscar clientes:', error)
    return { data: [], error: 'Erro na conex√£o' }
  }
}

export async function getRotasByVendedor(cod_vendedor: string) {
  try {
    const { data, error } = await supabase
      .from('rotas')
      .select('*')
      .eq('cod_vendedor', cod_vendedor)
    
    if (error) {
      console.error('Erro ao buscar rotas:', error)
      return { data: [], error: error.message }
    }
    
    return { data, error: null }
  } catch (error) {
    console.error('Erro na conex√£o ao buscar rotas:', error)
    return { data: [], error: 'Erro na conex√£o' }
  }
}

export async function getCidadesByVendedor(cod_vendedor: string) {
  try {
    const { data, error } = await supabase
      .from('cidades')
      .select('*')
      .eq('cod_vendedor', cod_vendedor)
    
    if (error) {
      console.error('Erro ao buscar cidades:', error)
      return { data: [], error: error.message }
    }
    
    return { data, error: null }
  } catch (error) {
    console.error('Erro na conex√£o ao buscar cidades:', error)
    return { data: [], error: 'Erro na conex√£o' }
  }
}

export async function getVendasByVendedor(cod_vendedor: string) {
  try {
    const { data, error } = await supabase
      .from('vendas')
      .select('*')
      .eq('cod_vendedor', cod_vendedor)
    
    if (error) {
      console.error('Erro ao buscar vendas:', error)
      return { data: [], error: error.message }
    }
    
    return { data, error: null }
  } catch (error) {
    console.error('Erro na conex√£o ao buscar vendas:', error)
    return { data: [], error: 'Erro na conex√£o' }
  }
}

// Fun√ß√£o para buscar dados completos do vendedor (incluindo apelido)
export async function getDadosVendedor(cod_vendedor: string) {
  try {
    const { data, error } = await supabase
      .from('vendedores')
      .select('*')
      .eq('cod_vendedor', cod_vendedor)
      .single()
    
    if (error) {
      console.error('Erro ao buscar dados do vendedor:', error)
      return { data: null, error: error.message }
    }
    
    return { data, error: null }
  } catch (error) {
    console.error('Erro na conex√£o ao buscar dados do vendedor:', error)
    return { data: null, error: 'Erro na conex√£o' }
  }
}